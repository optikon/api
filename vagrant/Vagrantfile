# -*k mode: ruby -*-
# vi: set ft=ruby :

$num_clusters = 2
if ENV["NUM_CLUSTERS"] && ENV["NUM_CLUSTERS"].to_i > 0
    $num_clusters = ENV["NUM_CLUSTERS"].to_i
end
$box = ENV["VM_NAME"] || "intelligent-edge-admin/centos-k8s-1.10.0"
$box_version = ENV["VM_VERSION"] || "1.1.0"

def provision_vm(config, vm_name, i)
    config.vm.hostname = vm_name
    config.vm.synced_folder ".", "/vagrant", disabled: true
    config.vm.box = $box
    config.vm.box_version = $box_version
    ip = "172.16.7.#{i+100}"
    config.vm.network :private_network, ip: ip
    config.vm.provision :shell, inline: "ifup eth1"
    config.vm.provision "shell", path: "scripts/reset-kubeconfig.sh", env: {"MYIP" => ip}, privileged: true
    config.vm.provision "file", source: "scripts/pv1.yaml", destination: "/home/vagrant/pv1.yaml"
    config.vm.provision "shell", path: "scripts/deploy-helm.sh",  privileged: true
end

Vagrant.configure("2") do |config|
    (1..$num_clusters).each do |i|
        if i == 1
            config.vm.define vm_name = "central", primary: true do |config|
                provision_vm(config, vm_name, i)
                config.vm.provision "file", source: "scripts/pv2.yaml", destination: "/home/vagrant/pv2.yaml"
                config.vm.provision "shell", path: "scripts/deploy-registry.sh", privileged: true
            end
        else
            config.vm.define vm_name = "%s-%01d" % ["edge", i-1] do |config|
                provision_vm(config, vm_name, i)
            end
        end
    end
end
