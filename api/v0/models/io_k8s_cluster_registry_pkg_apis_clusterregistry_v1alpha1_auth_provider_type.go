// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// IoK8sClusterRegistryPkgApisClusterregistryV1alpha1AuthProviderType AuthProviderType contains metadata about the auth provider. It should be used by clients to differentiate between different kinds of auth providers, and to select a relevant provider for the client's configuration. For example, a controller would look for a provider type that denotes a service account that it should use to access the cluster, whereas a user would look for a provider type that denotes an authentication system from which they should request a token.
// swagger:model io.k8s.cluster-registry.pkg.apis.clusterregistry.v1alpha1.AuthProviderType
type IoK8sClusterRegistryPkgApisClusterregistryV1alpha1AuthProviderType struct {

	// Name is the name of the auth provider.
	Name string `json:"name,omitempty"`
}

// Validate validates this io k8s cluster registry pkg apis clusterregistry v1alpha1 auth provider type
func (m *IoK8sClusterRegistryPkgApisClusterregistryV1alpha1AuthProviderType) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *IoK8sClusterRegistryPkgApisClusterregistryV1alpha1AuthProviderType) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IoK8sClusterRegistryPkgApisClusterregistryV1alpha1AuthProviderType) UnmarshalBinary(b []byte) error {
	var res IoK8sClusterRegistryPkgApisClusterregistryV1alpha1AuthProviderType
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
