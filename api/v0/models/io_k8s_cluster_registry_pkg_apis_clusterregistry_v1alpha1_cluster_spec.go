// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// IoK8sClusterRegistryPkgApisClusterregistryV1alpha1ClusterSpec ClusterSpec contains the specification of a cluster.
// swagger:model io.k8s.cluster-registry.pkg.apis.clusterregistry.v1alpha1.ClusterSpec
type IoK8sClusterRegistryPkgApisClusterregistryV1alpha1ClusterSpec struct {

	// AuthInfo contains public information that can be used to authenticate to and authorize with this cluster. It is not meant to store private information (e.g., tokens or client certificates) and cluster registry implementations are not expected to provide hardened storage for secrets.
	AuthInfo *IoK8sClusterRegistryPkgApisClusterregistryV1alpha1AuthInfo `json:"authInfo,omitempty"`

	// KubernetesAPIEndpoints represents the endpoints of the API server for this cluster.
	KubernetesAPIEndpoints *IoK8sClusterRegistryPkgApisClusterregistryV1alpha1KubernetesAPIEndpoints `json:"kubernetesApiEndpoints,omitempty"`
}

// Validate validates this io k8s cluster registry pkg apis clusterregistry v1alpha1 cluster spec
func (m *IoK8sClusterRegistryPkgApisClusterregistryV1alpha1ClusterSpec) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAuthInfo(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateKubernetesAPIEndpoints(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IoK8sClusterRegistryPkgApisClusterregistryV1alpha1ClusterSpec) validateAuthInfo(formats strfmt.Registry) error {

	if swag.IsZero(m.AuthInfo) { // not required
		return nil
	}

	if m.AuthInfo != nil {

		if err := m.AuthInfo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("authInfo")
			}
			return err
		}
	}

	return nil
}

func (m *IoK8sClusterRegistryPkgApisClusterregistryV1alpha1ClusterSpec) validateKubernetesAPIEndpoints(formats strfmt.Registry) error {

	if swag.IsZero(m.KubernetesAPIEndpoints) { // not required
		return nil
	}

	if m.KubernetesAPIEndpoints != nil {

		if err := m.KubernetesAPIEndpoints.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("kubernetesApiEndpoints")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *IoK8sClusterRegistryPkgApisClusterregistryV1alpha1ClusterSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IoK8sClusterRegistryPkgApisClusterregistryV1alpha1ClusterSpec) UnmarshalBinary(b []byte) error {
	var res IoK8sClusterRegistryPkgApisClusterregistryV1alpha1ClusterSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
