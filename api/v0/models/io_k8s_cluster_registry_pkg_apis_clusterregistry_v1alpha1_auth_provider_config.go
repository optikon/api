// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// IoK8sClusterRegistryPkgApisClusterregistryV1alpha1AuthProviderConfig AuthProviderConfig contains the information necessary for a client to authenticate to a Kubernetes API server. It is modeled after k8s.io/client-go/tools/clientcmd/api/v1.AuthProviderConfig.
// swagger:model io.k8s.cluster-registry.pkg.apis.clusterregistry.v1alpha1.AuthProviderConfig
type IoK8sClusterRegistryPkgApisClusterregistryV1alpha1AuthProviderConfig struct {

	// Config is a map of values that contains the information necessary for a client to determine how to authenticate to a Kubernetes API server.
	Config map[string]string `json:"config,omitempty"`

	// Name is the name of this configuration.
	Name string `json:"name,omitempty"`

	// Type contains type information about this auth provider. Clients of the cluster registry should use this field to differentiate between different kinds of authentication providers.
	Type *IoK8sClusterRegistryPkgApisClusterregistryV1alpha1AuthProviderType `json:"type,omitempty"`
}

// Validate validates this io k8s cluster registry pkg apis clusterregistry v1alpha1 auth provider config
func (m *IoK8sClusterRegistryPkgApisClusterregistryV1alpha1AuthProviderConfig) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IoK8sClusterRegistryPkgApisClusterregistryV1alpha1AuthProviderConfig) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	if m.Type != nil {

		if err := m.Type.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("type")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *IoK8sClusterRegistryPkgApisClusterregistryV1alpha1AuthProviderConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IoK8sClusterRegistryPkgApisClusterregistryV1alpha1AuthProviderConfig) UnmarshalBinary(b []byte) error {
	var res IoK8sClusterRegistryPkgApisClusterregistryV1alpha1AuthProviderConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
