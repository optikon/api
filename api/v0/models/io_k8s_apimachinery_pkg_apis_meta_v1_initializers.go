// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IoK8sApimachineryPkgApisMetaV1Initializers Initializers tracks the progress of initialization.
// swagger:model io.k8s.apimachinery.pkg.apis.meta.v1.Initializers
type IoK8sApimachineryPkgApisMetaV1Initializers struct {

	// pending
	// Required: true
	Pending IoK8sApimachineryPkgApisMetaV1InitializersPending `json:"pending"`

	// If result is set with the Failure field, the object will be persisted to storage and then deleted, ensuring that other clients can observe the deletion.
	Result *IoK8sApimachineryPkgApisMetaV1Status `json:"result,omitempty"`
}

// Validate validates this io k8s apimachinery pkg apis meta v1 initializers
func (m *IoK8sApimachineryPkgApisMetaV1Initializers) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePending(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateResult(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IoK8sApimachineryPkgApisMetaV1Initializers) validatePending(formats strfmt.Registry) error {

	if err := validate.Required("pending", "body", m.Pending); err != nil {
		return err
	}

	if err := m.Pending.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("pending")
		}
		return err
	}

	return nil
}

func (m *IoK8sApimachineryPkgApisMetaV1Initializers) validateResult(formats strfmt.Registry) error {

	if swag.IsZero(m.Result) { // not required
		return nil
	}

	if m.Result != nil {

		if err := m.Result.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("result")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *IoK8sApimachineryPkgApisMetaV1Initializers) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IoK8sApimachineryPkgApisMetaV1Initializers) UnmarshalBinary(b []byte) error {
	var res IoK8sApimachineryPkgApisMetaV1Initializers
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
