// Code generated by go-swagger; DO NOT EDIT.

package charts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetChartsHandlerFunc turns a function with the right signature into a get charts handler
type GetChartsHandlerFunc func(GetChartsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetChartsHandlerFunc) Handle(params GetChartsParams) middleware.Responder {
	return fn(params)
}

// GetChartsHandler interface for that can handle valid get charts params
type GetChartsHandler interface {
	Handle(GetChartsParams) middleware.Responder
}

// NewGetCharts creates a new http.Handler for the get charts operation
func NewGetCharts(ctx *middleware.Context, handler GetChartsHandler) *GetCharts {
	return &GetCharts{Context: ctx, Handler: handler}
}

/*GetCharts swagger:route GET /charts charts getCharts

Returns all charts

Returns a list of charts

*/
type GetCharts struct {
	Context *middleware.Context
	Handler GetChartsHandler
}

func (o *GetCharts) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetChartsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
