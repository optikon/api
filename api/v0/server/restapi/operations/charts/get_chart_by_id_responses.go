// Code generated by go-swagger; DO NOT EDIT.

package charts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"wwwin-github.cisco.com/edge/optikon/api/v0/models"
)

// GetChartByIDOKCode is the HTTP code returned for type GetChartByIDOK
const GetChartByIDOKCode int = 200

/*GetChartByIDOK OK

swagger:response getChartByIdOK
*/
type GetChartByIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.ChartChart `json:"body,omitempty"`
}

// NewGetChartByIDOK creates GetChartByIDOK with default headers values
func NewGetChartByIDOK() *GetChartByIDOK {
	return &GetChartByIDOK{}
}

// WithPayload adds the payload to the get chart by Id o k response
func (o *GetChartByIDOK) WithPayload(payload *models.ChartChart) *GetChartByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get chart by Id o k response
func (o *GetChartByIDOK) SetPayload(payload *models.ChartChart) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetChartByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetChartByIDBadRequestCode is the HTTP code returned for type GetChartByIDBadRequest
const GetChartByIDBadRequestCode int = 400

/*GetChartByIDBadRequest Bad Request

swagger:response getChartByIdBadRequest
*/
type GetChartByIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetChartByIDBadRequest creates GetChartByIDBadRequest with default headers values
func NewGetChartByIDBadRequest() *GetChartByIDBadRequest {
	return &GetChartByIDBadRequest{}
}

// WithPayload adds the payload to the get chart by Id bad request response
func (o *GetChartByIDBadRequest) WithPayload(payload *models.APIResponse) *GetChartByIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get chart by Id bad request response
func (o *GetChartByIDBadRequest) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetChartByIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetChartByIDUnauthorizedCode is the HTTP code returned for type GetChartByIDUnauthorized
const GetChartByIDUnauthorizedCode int = 401

/*GetChartByIDUnauthorized Unauthorized

swagger:response getChartByIdUnauthorized
*/
type GetChartByIDUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetChartByIDUnauthorized creates GetChartByIDUnauthorized with default headers values
func NewGetChartByIDUnauthorized() *GetChartByIDUnauthorized {
	return &GetChartByIDUnauthorized{}
}

// WithPayload adds the payload to the get chart by Id unauthorized response
func (o *GetChartByIDUnauthorized) WithPayload(payload *models.APIResponse) *GetChartByIDUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get chart by Id unauthorized response
func (o *GetChartByIDUnauthorized) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetChartByIDUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetChartByIDNotFoundCode is the HTTP code returned for type GetChartByIDNotFound
const GetChartByIDNotFoundCode int = 404

/*GetChartByIDNotFound The specified resource was not found

swagger:response getChartByIdNotFound
*/
type GetChartByIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetChartByIDNotFound creates GetChartByIDNotFound with default headers values
func NewGetChartByIDNotFound() *GetChartByIDNotFound {
	return &GetChartByIDNotFound{}
}

// WithPayload adds the payload to the get chart by Id not found response
func (o *GetChartByIDNotFound) WithPayload(payload *models.APIResponse) *GetChartByIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get chart by Id not found response
func (o *GetChartByIDNotFound) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetChartByIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetChartByIDInternalServerErrorCode is the HTTP code returned for type GetChartByIDInternalServerError
const GetChartByIDInternalServerErrorCode int = 500

/*GetChartByIDInternalServerError Internal Server Error

swagger:response getChartByIdInternalServerError
*/
type GetChartByIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetChartByIDInternalServerError creates GetChartByIDInternalServerError with default headers values
func NewGetChartByIDInternalServerError() *GetChartByIDInternalServerError {
	return &GetChartByIDInternalServerError{}
}

// WithPayload adds the payload to the get chart by Id internal server error response
func (o *GetChartByIDInternalServerError) WithPayload(payload *models.APIResponse) *GetChartByIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get chart by Id internal server error response
func (o *GetChartByIDInternalServerError) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetChartByIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
