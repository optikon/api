// Code generated by go-swagger; DO NOT EDIT.

package clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"wwwin-github.cisco.com/edge/optikon/api/v0/models"
)

// GetClusterByIDOKCode is the HTTP code returned for type GetClusterByIDOK
const GetClusterByIDOKCode int = 200

/*GetClusterByIDOK OK

swagger:response getClusterByIdOK
*/
type GetClusterByIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.IoK8sClusterRegistryPkgApisClusterregistryV1alpha1Cluster `json:"body,omitempty"`
}

// NewGetClusterByIDOK creates GetClusterByIDOK with default headers values
func NewGetClusterByIDOK() *GetClusterByIDOK {
	return &GetClusterByIDOK{}
}

// WithPayload adds the payload to the get cluster by Id o k response
func (o *GetClusterByIDOK) WithPayload(payload *models.IoK8sClusterRegistryPkgApisClusterregistryV1alpha1Cluster) *GetClusterByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cluster by Id o k response
func (o *GetClusterByIDOK) SetPayload(payload *models.IoK8sClusterRegistryPkgApisClusterregistryV1alpha1Cluster) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClusterByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetClusterByIDBadRequestCode is the HTTP code returned for type GetClusterByIDBadRequest
const GetClusterByIDBadRequestCode int = 400

/*GetClusterByIDBadRequest Bad Request

swagger:response getClusterByIdBadRequest
*/
type GetClusterByIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetClusterByIDBadRequest creates GetClusterByIDBadRequest with default headers values
func NewGetClusterByIDBadRequest() *GetClusterByIDBadRequest {
	return &GetClusterByIDBadRequest{}
}

// WithPayload adds the payload to the get cluster by Id bad request response
func (o *GetClusterByIDBadRequest) WithPayload(payload *models.APIResponse) *GetClusterByIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cluster by Id bad request response
func (o *GetClusterByIDBadRequest) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClusterByIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetClusterByIDUnauthorizedCode is the HTTP code returned for type GetClusterByIDUnauthorized
const GetClusterByIDUnauthorizedCode int = 401

/*GetClusterByIDUnauthorized Unauthorized

swagger:response getClusterByIdUnauthorized
*/
type GetClusterByIDUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetClusterByIDUnauthorized creates GetClusterByIDUnauthorized with default headers values
func NewGetClusterByIDUnauthorized() *GetClusterByIDUnauthorized {
	return &GetClusterByIDUnauthorized{}
}

// WithPayload adds the payload to the get cluster by Id unauthorized response
func (o *GetClusterByIDUnauthorized) WithPayload(payload *models.APIResponse) *GetClusterByIDUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cluster by Id unauthorized response
func (o *GetClusterByIDUnauthorized) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClusterByIDUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetClusterByIDNotFoundCode is the HTTP code returned for type GetClusterByIDNotFound
const GetClusterByIDNotFoundCode int = 404

/*GetClusterByIDNotFound The specified resource was not found

swagger:response getClusterByIdNotFound
*/
type GetClusterByIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetClusterByIDNotFound creates GetClusterByIDNotFound with default headers values
func NewGetClusterByIDNotFound() *GetClusterByIDNotFound {
	return &GetClusterByIDNotFound{}
}

// WithPayload adds the payload to the get cluster by Id not found response
func (o *GetClusterByIDNotFound) WithPayload(payload *models.APIResponse) *GetClusterByIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cluster by Id not found response
func (o *GetClusterByIDNotFound) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClusterByIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetClusterByIDInternalServerErrorCode is the HTTP code returned for type GetClusterByIDInternalServerError
const GetClusterByIDInternalServerErrorCode int = 500

/*GetClusterByIDInternalServerError Internal Server Error

swagger:response getClusterByIdInternalServerError
*/
type GetClusterByIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetClusterByIDInternalServerError creates GetClusterByIDInternalServerError with default headers values
func NewGetClusterByIDInternalServerError() *GetClusterByIDInternalServerError {
	return &GetClusterByIDInternalServerError{}
}

// WithPayload adds the payload to the get cluster by Id internal server error response
func (o *GetClusterByIDInternalServerError) WithPayload(payload *models.APIResponse) *GetClusterByIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cluster by Id internal server error response
func (o *GetClusterByIDInternalServerError) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClusterByIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
