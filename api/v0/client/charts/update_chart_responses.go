// Code generated by go-swagger; DO NOT EDIT.

package charts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"wwwin-github.cisco.com/edge/optikon/api/v0/models"
)

// UpdateChartReader is a Reader for the UpdateChart structure.
type UpdateChartReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateChartReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateChartOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUpdateChartBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewUpdateChartUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewUpdateChartNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewUpdateChartInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateChartOK creates a UpdateChartOK with default headers values
func NewUpdateChartOK() *UpdateChartOK {
	return &UpdateChartOK{}
}

/*UpdateChartOK handles this case with default header values.

OK
*/
type UpdateChartOK struct {
}

func (o *UpdateChartOK) Error() string {
	return fmt.Sprintf("[PUT /charts/{chartId}][%d] updateChartOK ", 200)
}

func (o *UpdateChartOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateChartBadRequest creates a UpdateChartBadRequest with default headers values
func NewUpdateChartBadRequest() *UpdateChartBadRequest {
	return &UpdateChartBadRequest{}
}

/*UpdateChartBadRequest handles this case with default header values.

Bad Request
*/
type UpdateChartBadRequest struct {
	Payload *models.APIResponse
}

func (o *UpdateChartBadRequest) Error() string {
	return fmt.Sprintf("[PUT /charts/{chartId}][%d] updateChartBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateChartBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateChartUnauthorized creates a UpdateChartUnauthorized with default headers values
func NewUpdateChartUnauthorized() *UpdateChartUnauthorized {
	return &UpdateChartUnauthorized{}
}

/*UpdateChartUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateChartUnauthorized struct {
	Payload *models.APIResponse
}

func (o *UpdateChartUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /charts/{chartId}][%d] updateChartUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateChartUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateChartNotFound creates a UpdateChartNotFound with default headers values
func NewUpdateChartNotFound() *UpdateChartNotFound {
	return &UpdateChartNotFound{}
}

/*UpdateChartNotFound handles this case with default header values.

The specified resource was not found
*/
type UpdateChartNotFound struct {
	Payload *models.APIResponse
}

func (o *UpdateChartNotFound) Error() string {
	return fmt.Sprintf("[PUT /charts/{chartId}][%d] updateChartNotFound  %+v", 404, o.Payload)
}

func (o *UpdateChartNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateChartInternalServerError creates a UpdateChartInternalServerError with default headers values
func NewUpdateChartInternalServerError() *UpdateChartInternalServerError {
	return &UpdateChartInternalServerError{}
}

/*UpdateChartInternalServerError handles this case with default header values.

Internal Server Error
*/
type UpdateChartInternalServerError struct {
	Payload *models.APIResponse
}

func (o *UpdateChartInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /charts/{chartId}][%d] updateChartInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateChartInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
