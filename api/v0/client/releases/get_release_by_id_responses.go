// Code generated by go-swagger; DO NOT EDIT.

package releases

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/optikon/api/api/v0/models"
)

// GetReleaseByIDReader is a Reader for the GetReleaseByID structure.
type GetReleaseByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetReleaseByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetReleaseByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetReleaseByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetReleaseByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetReleaseByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetReleaseByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetReleaseByIDOK creates a GetReleaseByIDOK with default headers values
func NewGetReleaseByIDOK() *GetReleaseByIDOK {
	return &GetReleaseByIDOK{}
}

/*GetReleaseByIDOK handles this case with default header values.

OK
*/
type GetReleaseByIDOK struct {
	Payload *models.ReleaseRelease
}

func (o *GetReleaseByIDOK) Error() string {
	return fmt.Sprintf("[GET /releases/{releaseId}][%d] getReleaseByIdOK  %+v", 200, o.Payload)
}

func (o *GetReleaseByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ReleaseRelease)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReleaseByIDBadRequest creates a GetReleaseByIDBadRequest with default headers values
func NewGetReleaseByIDBadRequest() *GetReleaseByIDBadRequest {
	return &GetReleaseByIDBadRequest{}
}

/*GetReleaseByIDBadRequest handles this case with default header values.

Bad Request
*/
type GetReleaseByIDBadRequest struct {
	Payload *models.APIResponse
}

func (o *GetReleaseByIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /releases/{releaseId}][%d] getReleaseByIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetReleaseByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReleaseByIDUnauthorized creates a GetReleaseByIDUnauthorized with default headers values
func NewGetReleaseByIDUnauthorized() *GetReleaseByIDUnauthorized {
	return &GetReleaseByIDUnauthorized{}
}

/*GetReleaseByIDUnauthorized handles this case with default header values.

Unauthorized
*/
type GetReleaseByIDUnauthorized struct {
	Payload *models.APIResponse
}

func (o *GetReleaseByIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /releases/{releaseId}][%d] getReleaseByIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetReleaseByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReleaseByIDNotFound creates a GetReleaseByIDNotFound with default headers values
func NewGetReleaseByIDNotFound() *GetReleaseByIDNotFound {
	return &GetReleaseByIDNotFound{}
}

/*GetReleaseByIDNotFound handles this case with default header values.

The specified resource was not found
*/
type GetReleaseByIDNotFound struct {
	Payload *models.APIResponse
}

func (o *GetReleaseByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /releases/{releaseId}][%d] getReleaseByIdNotFound  %+v", 404, o.Payload)
}

func (o *GetReleaseByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReleaseByIDInternalServerError creates a GetReleaseByIDInternalServerError with default headers values
func NewGetReleaseByIDInternalServerError() *GetReleaseByIDInternalServerError {
	return &GetReleaseByIDInternalServerError{}
}

/*GetReleaseByIDInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetReleaseByIDInternalServerError struct {
	Payload *models.APIResponse
}

func (o *GetReleaseByIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /releases/{releaseId}][%d] getReleaseByIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetReleaseByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
